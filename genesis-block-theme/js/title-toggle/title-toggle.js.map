{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./inc/admin/title-toggle/js/title-toggle.js","webpack:///external {\"this\":[\"wp\",\"components\"]}","webpack:///external {\"this\":[\"wp\",\"compose\"]}","webpack:///external {\"this\":[\"wp\",\"data\"]}","webpack:///external {\"this\":[\"wp\",\"editPost\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}","webpack:///external {\"this\":[\"wp\",\"i18n\"]}","webpack:///external {\"this\":[\"wp\",\"plugins\"]}"],"names":["genesisBlockThemeHideTitleComponent","hideTitle","onUpdate","__","render","compose","withSelect","select","getEditedPostAttribute","_genesis_block_theme_hide_title","withDispatch","dispatch","ownProps","currentMeta","newMeta","editPost","meta","registerPlugin"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;;;;;;;;;;AAUA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAMA,SAASA,mCAAT,OAAwE;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,QAAa,QAAbA,QAAa;AACvE,sBACC,oBAAC,2DAAD,qBACC,oBAAC,yEAAD;AAAsB,aAAS,EAAC;AAAhC,kBACC,oBAAC,qEAAD;AACC,SAAK,EAAGC,0DAAE,CAAE,iBAAF,EAAqB,qBAArB,CADX;AAEC,WAAO,EAAGF,SAFX;AAGC,YAAQ,EAAG;AAAA,aAAMC,QAAQ,CAAE,CAAED,SAAJ,CAAd;AAAA;AAHZ,IADD,CADD,CADD;AAWA,C,CAED;AACA;AACA;;;AACA,IAAMG,MAAM,GAAGC,kEAAO,CAAE,CACvBC,kEAAU,CAAE,UAAEC,MAAF,EAAc;AACzB,SAAO;AACNN,aAAS,EAAEM,MAAM,CAAE,aAAF,CAAN,CAAwBC,sBAAxB,CAAgD,MAAhD,EAAyDC;AAD9D,GAAP;AAGA,CAJS,CADa,EAMvBC,oEAAY,CAAE,UAAEC,QAAF,EAAYC,QAAZ;AAAA,MAAwBL,MAAxB,SAAwBA,MAAxB;AAAA,SAAwC;AACrDL,YADqD,oBAC3CD,SAD2C,EAC/B;AACrB,UAAMY,WAAW,GAAGN,MAAM,CAAE,aAAF,CAAN,CAAwBC,sBAAxB,CAAgD,MAAhD,CAApB;;AACA,UAAMM,OAAO,mCACTD,WADS;AAEZJ,uCAA+B,EAAER;AAFrB,QAAb;;AAIAU,cAAQ,CAAE,aAAF,CAAR,CAA0BI,QAA1B,CAAoC;AAAEC,YAAI,EAAEF;AAAR,OAApC;AACA;AARoD,GAAxC;AAAA,CAAF,CANW,CAAF,CAAP,CAgBVd,mCAhBU,CAAf;AAkBAiB,yEAAc,CAAE,kCAAF,EAAsC;AAAEb,QAAM,EAANA;AAAF,CAAtC,CAAd,C;;;;;;;;;;;AC9DA,aAAa,2CAA2C,EAAE,I;;;;;;;;;;;ACA1D,aAAa,wCAAwC,EAAE,I;;;;;;;;;;;ACAvD,aAAa,qCAAqC,EAAE,I;;;;;;;;;;;ACApD,aAAa,yCAAyC,EAAE,I;;;;;;;;;;;ACAxD,aAAa,wCAAwC,EAAE,I;;;;;;;;;;;ACAvD,aAAa,qCAAqC,EAAE,I;;;;;;;;;;;ACApD,aAAa,wCAAwC,EAAE,I","file":"title-toggle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./inc/admin/title-toggle/js/title-toggle.js\");\n","/**\n * Adds a “hide title” checkbox to the Block Editor sidebar under the\n * Document sidebar in the Status & Visibility panel. Unchecked by default.\n *\n * If checked and the post is updated or published, `_genesis_block_theme_hide_title`\n * is set to true in post meta.\n *\n * @package Genesis Block Theme\n */\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { PluginPostStatusInfo } from '@wordpress/edit-post';\nimport { CheckboxControl } from '@wordpress/components';\nimport { registerPlugin } from '@wordpress/plugins';\n\n/**\n * Checkbox component for the hide title option.\n *\n * @param {Object} props Component properties.\n * @return {Object} hideTitleComponent\n */\nfunction genesisBlockThemeHideTitleComponent( { hideTitle, onUpdate } ) {\n\treturn (\n\t\t<Fragment>\n\t\t\t<PluginPostStatusInfo className=\"edit-post-hideTitle\">\n\t\t\t\t<CheckboxControl\n\t\t\t\t\tlabel={ __( 'Hide Page Title', 'genesis-block-theme' ) }\n\t\t\t\t\tchecked={ hideTitle }\n\t\t\t\t\tonChange={ () => onUpdate( ! hideTitle ) }\n\t\t\t\t/>\n\t\t\t</PluginPostStatusInfo>\n\t\t</Fragment>\n\t);\n}\n\n// Retrieves meta from the Block Editor Redux store (withSelect) to set initial checkbox state.\n// Persists it to the Redux store on change (withDispatch).\n// Changes are only stored in the WordPress database when the post is updated.\nconst render = compose( [\n\twithSelect( ( select ) => {\n\t\treturn {\n\t\t\thideTitle: select( 'core/editor' ).getEditedPostAttribute( 'meta' )._genesis_block_theme_hide_title,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps, { select } ) => ( {\n\t\tonUpdate( hideTitle ) {\n\t\t\tconst currentMeta = select( 'core/editor' ).getEditedPostAttribute( 'meta' );\n\t\t\tconst newMeta = {\n\t\t\t\t...currentMeta,\n\t\t\t\t_genesis_block_theme_hide_title: hideTitle,\n\t\t\t};\n\t\t\tdispatch( 'core/editor' ).editPost( { meta: newMeta } );\n\t\t},\n\t} ) ),\n] )( genesisBlockThemeHideTitleComponent );\n\nregisterPlugin( 'genesis-block-theme-title-toggle', { render } );\n","(function() { module.exports = this[\"wp\"][\"components\"]; }());","(function() { module.exports = this[\"wp\"][\"compose\"]; }());","(function() { module.exports = this[\"wp\"][\"data\"]; }());","(function() { module.exports = this[\"wp\"][\"editPost\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());","(function() { module.exports = this[\"wp\"][\"plugins\"]; }());"],"sourceRoot":""}